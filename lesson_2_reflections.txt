What happens when you initialize a repository? Why do you need to do it?

    When you initialize a repository, it generates a .git, which is used to track the files in that repository

    This is important so you can track the changes.

How is the staging area different from the working directory and the repository? What value do you think it offers?

    The staging area is unique because it offers a middle spot between the local and git locations. It is valuable
    because it offers a spot to differentiate which files should be include in a commit.

How can you use the staging area to make sure you have one commit per logical change?

    It is always a good idea to check the difference between staging and the last commit to assure that what you're
    committing is actually what you want to commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

    It would be helpful if you want to make a separate version of your master branch or to experiment with large-scale changes

How do the diagrams help you visualize the branch structure?

    Diagrams help visualize the branch structure by making it clear where I am and what I have access to/repercussions of committing.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

    The result of merging two branches is that, assuming there are not conflicts, commits will be combined from the entirety of both branch
    histories into the "tip" of whatever branch is currently checked out
